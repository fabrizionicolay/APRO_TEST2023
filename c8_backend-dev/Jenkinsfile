pipeline {
    agent any

    environment {
        // Define las variables de entorno necesarias, por ejemplo, rutas y configuraciones
    }

    stages {
        stage('Checkout') {
            steps {
                // Clonar el repositorio de código fuente desde tu sistema de control de versiones
                 script {
            def gitCredentials = credentials('github') // Debes definir tus propias credenciales
            checkout([$class: 'GitSCM',
                branches: [[name: '*/main']], // Puedes especificar la rama que desees
                userRemoteConfigs: [[
                    url: 'https://github.com/fabrizionicolay/APRO_TEST2023.git', // Reemplaza con la URL de tu repositorio
                    credentialsId: gitCredentials
                ]]
            ])
        }
                checkout scm
            }
        }

        stage('Build') {
            steps {
                // Instalar dependencias de Node.js (por ejemplo, npm o yarn)
                sh 'npm install'
            }
        }

        stage('Code Quality Analysis') {
            steps {
                // Ejecutar el análisis de código con SonarQube
                script {
                    def scannerHome = tool name: 'SonarQube Scanner', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
                    withSonarQubeEnv('sonarqube') {
                        sh "${scannerHome}/bin/sonar-scanner"
                    }
                }
            }
        }

        stage('Unit Tests') {
            steps {
                // Ejecutar pruebas unitarias (por ejemplo, usando frameworks como Jest, Mocha, Jasmine, etc.)
                sh 'npm test'
            }
        }

        stage('Deployment') {
            steps {
                // Aquí puedes agregar pasos para implementar tu aplicación en el entorno de destino
            }
        }
    }

    post {
        success {
            // Acciones a realizar si el pipeline se ejecuta con éxito
            echo 'El pipeline se ejecutó con éxito'
        }

        failure {
            // Acciones a realizar si el pipeline falla
            echo 'El pipeline falló. Se deben tomar medidas adecuadas.'
        }
    }
}
